// 이번은 시간을 queue에 넣는다는 생각.
// 시간과 무게를 따로 관리한다는거 가 포인트였던듯


import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;

class Solution {
    public int solution(int bridge_length, int weight, int[] truck_weights) {
        int answer = 0;
        Queue<Integer> q = new LinkedList<>();
        Queue<Integer> t = new LinkedList<>();
        Queue<Integer> w = new LinkedList<>();
        

        // 순서대로 트럭 Queue에 입력
        for(int i : truck_weights)
            q.offer(i);
        
        // 최초 1대 진입
        int time = 0;
        int cur_w = q.peek();
        // 무게, 시간 추가
        w.offer(q.peek());
        t.offer(0);
        q.poll();
        
        while(!t.isEmpty())
        {
            // 1초가 지남
            time++; 
            // 1초가 지났을때 맨 앞에 있는건 다 나왔는가?
            if(time - t.peek() == bridge_length)
            {
                cur_w -= w.peek();
                w.poll();
                t.poll();
            }
            // 건널 트럭이 있으면 무게 측정해서 추가
            if(!q.isEmpty())
            {
                if(cur_w + q.peek() <= weight)
                {
                    w.offer(q.peek());
                    t.offer(time);
                    cur_w += q.peek();
                    q.poll();                
                }
            }
        }
        answer = time + 1;
        return answer;
    }
}